import java.io.*;import java.net.*;import java.util.*;/** * <p>Title: </p> * * <p>Description: </p> * * <p>Copyright: Copyright (c) 2007</p> * * <p>Company: </p> * * @author not attributable * @modified by: William Mac * @version 1.1 */public class MoreServerTest {	public static String HOST_NAME = "localhost";	public static int PORT = 8199;	public static void main(String[] args)	{		String input = "";		String fileName = "";				String pageName = "";		boolean bPageStatus = false;				char option;		Scanner keyboard = new Scanner(System.in);		Socket server = null;		BufferedReader fromServer = null;		PrintWriter toServer = null;				if (args.length == 1)		{			HOST_NAME = args[0];		}		else if (args.length == 2)		{			HOST_NAME = args[0];			try			{				PORT = Integer.parseInt(args[1]);			}			catch (NumberFormatException nfe)			{				PORT = 8199;			}		}				for (;;) 		{			try 			{				server = new Socket(HOST_NAME, PORT);					fromServer = new BufferedReader( new InputStreamReader(server.getInputStream()));				toServer = new PrintWriter(server.getOutputStream(), true);				System.out.println();				System.out.println("Welcome to CSC 667/867 Additional Webserver Test Case ...\n");				System.out.println("Main Menu\n");								System.out.println("1) GET (200) Test");				System.out.println("2) HEAD Test");				System.out.println("3) PUT - 201 (Test)");				System.out.println("4) PUT - 204 (No Content Test)");				System.out.println("5) 304 Test");								System.out.println("6) 400 Response Code Test");				System.out.println("7) Quit\n");				System.out.print("Choose an option: ");				input = keyboard.next();				option = input.charAt(0);				switch(option)				{					case '1': pageName = "page200.html";												  getTest(toServer, fromServer, pageName);							  break;					case '2': pageName = "pageHead.html";										          headTest(toServer, fromServer, pageName);												  break;										case '3': Random generator1 = new Random( 19781428 );										          String randFile1 = String.valueOf(generator1.nextDouble());							  					          fileName = "putNewFile" + randFile1 + ".txt";										          putNewTest(toServer, fromServer, fileName);							  							  break;										case '4': 					          Random generator2 = new Random( 19781428 );										          String randFile2 = String.valueOf(generator2.nextDouble());							  					          fileName = "putZeroFile" + randFile2 + ".txt";							  					          putZeroTest(toServer, fromServer, fileName);					          break;					case '5': 					          do							  {							      System.out.println("1) Older Cached Page (cached browser date) older than modified date (server)");					              System.out.println("2) Newer Cached Page (cached browser date) newer than modified date (server)\n");					              System.out.print("Choose an option: ");					              input = keyboard.next();								  								  if (input != null)								  {								      input = input.trim();									  if (!input.equals("1") && !input.equals("2"))									  {									       System.out.println("Invalid option: try again!");									  }								  }					          } while(!input.equals("1") && !input.equals("2"));							  if (input.equals("1"))							  {								 pageName = "page304newserver.html";					             bPageStatus = true;							  }					          else							  {							      pageName = "page304oldserver.html";					              bPageStatus = false;  							  }					          cachedTest(toServer, fromServer, bPageStatus, pageName);							  					          break;		  					case '6': 					          do					          {							      System.out.println("1) first header line: wrong number of arguments");												      System.out.println("2) first line header: LIST method");							  							      System.out.print("Choose an option: ");							  							      input = keyboard.next();								  								  if (input != null)								  {								      input = input.trim();									  if (!input.equals("1") && !input.equals("2"))									  {									       System.out.println("Invalid option: try again!");									  }								  }					          } while(!input.equals("1") && !input.equals("2"));							  							  pageName = "page400.html";							  							  if (input.equals("1"))							  {								  firstLineHeaderTest(toServer, fromServer, pageName);							  }							  else							  {							      methodTest(toServer, fromServer, "LIST", pageName);							  }					  		  break;										case '7': System.exit(0);					default: System.out.println("Invalid option!!! Try again...");				}			} 			catch (UnknownHostException e) 			{				System.out.println("The web server at Host: " + HOST_NAME + ", Port: " + PORT + " is not started.");				System.out.println("Please check the port in your config (httpd.conf) file to see if it is configured at Port: " + PORT);				System.out.println("Please also make sure to start your webserver before running this program.");				System.out.println("Window Users: re-run this program by double clicking on the jar file");				System.out.println("Linux/Unix Users: re-run this program by typing java -jar MoreTest.jar");				System.exit(1);			}			catch (IOException e) 			{				System.out.println("The web server at Host: " + HOST_NAME + ", Port: " + PORT + " is not detected.");				System.out.println("Please check the port in the config (httpd.conf) file to see if it is configured at Port: " + PORT);				System.out.println("Please also make sure to start your webserver before running this program.");				System.out.println("Window Users: re-run this program by double clicking on the jar file.");				System.out.println("Linux/Unix Users: re-run this program by typing -> java -jar MoreTest.jar");				System.exit(1);			}			finally			{				try 				{					if (fromServer != null)					{						fromServer.close();					}										if (toServer != null)					{						toServer.close();					}					if (server != null)					{						server.close();					}				} 				catch (IOException e) 				{					}							}		}	}	public static void cachedTest(PrintWriter writeServer, BufferedReader readServer, boolean bNewBodyPage, String pageName)	{		String s = "";		String dateString = "";		boolean isContainBody = false;		if (bNewBodyPage)			dateString = "If-Modified-Since: Mon, 15 Mar 2004 11:54:29 GMT";		else			dateString = "If-Modified-Since: Fri, 30 Mar 2009 11:54:29 GMT";		writeServer.println("GET /" + pageName + " HTTP/1.1");		writeServer.println("Host: localhost");		writeServer.println(dateString);		writeServer.println();		String code = "error";				try 		{				int count = 0;							while ((s = readServer.readLine()) != null)			{						    if (count == 0)				{				    if (s != null)					{					    String [] args = s.split(" ");					    if (args.length > 2)						{					        code = args[1];						    code = code.trim();						}					}				}								if (s.startsWith("<html>"))				{				    isContainBody = true;				}												System.out.println(s);								count++;			}					} catch (IOException e) {			}		if (bNewBodyPage)		{			if (code.equals("200") && isContainBody)			{				System.out.println("--------------------------");				System.out.println("304 Cache Test - Pass!");				System.out.println("--------------------------");			}			else			{				System.out.println("-------------------------");				System.out.println("304 CacheTest - Fail!");				System.out.println("-------------------------");			}		}		else		{			if (code.equals("304") && !isContainBody)			{				System.out.println("--------------------------");				System.out.println("304 Cache Test - Pass!");				System.out.println("--------------------------");			}			else			{				System.out.println("-------------------------");				System.out.println("304 CacheTest - Fail!");				System.out.println("-------------------------");			}		}				}	public static void firstLineHeaderTest(PrintWriter writeServer, BufferedReader readServer, String pageName)	{		String s = "";		String firstHeaderLine = "GET /" + pageName;		writeServer.println(firstHeaderLine);		writeServer.println("Host: localhost");		writeServer.println();		String code = "error";				try 		{				int count = 0;							while ((s = readServer.readLine()) != null)			{						    if (count == 0)				{				    if (s != null)					{					    String [] args = s.split(" ");					    if (args.length > 2)						{					        code = args[1];						    code = code.trim();						}					}				}								System.out.println(s);								count++;			}					} catch (IOException e) {			}		if (code.equals("400"))		{			System.out.println("-------------------------");			System.out.println("400 Response Test - Pass!");			System.out.println("-------------------------");		}		else		{			System.out.println("------------------------");			System.out.println("400 Response Test - Fail!");			System.out.println("------------------------");		}		}	public static void methodTest(PrintWriter writeServer, BufferedReader readServer, String method, String pageName)	{		String s = "";		String firstHeaderLine = method + " /" + pageName + " HTTP/1.1";		writeServer.println(firstHeaderLine);		writeServer.println("Host: localhost");		writeServer.println();		String code = "error";				try 		{			    int count = 0;							while ((s = readServer.readLine()) != null)			{						    if (count == 0)				{				    if (s != null)					{					    String [] args = s.split(" ");					    if (args.length > 2)						{					        code = args[1];						    code = code.trim();						}					}				}								System.out.println(s);								count++;			}					} catch (IOException e) {			}		if (code.equals("400") || code.equals("501"))		{			System.out.println("-------------------------------------");			System.out.println("400 / 501 Response Test - Pass!");			System.out.println("-------------------------------------");		}		else		{			System.out.println("------------------------");			System.out.println("400 / 501 Response Test - Fail!");			System.out.println("------------------------");		}		}		public static void headTest(PrintWriter writeServer, BufferedReader readServer, String pageName)	{		String s = "";		String firstHeaderLine = "HEAD /" + pageName + " HTTP/1.1";		writeServer.println(firstHeaderLine);		writeServer.println("Host: localhost");		writeServer.println();		boolean status = true;		 		try 		{   				while((s = readServer.readLine()) != null )			{			    if (s.startsWith("<html>"))				{				    status = false;				}								System.out.println(s);							}		} catch (IOException e) {		}				if (status)		{			System.out.println("---------------------");		    System.out.println("HEAD Test - Pass!");			System.out.println("---------------------");		}		else		{			System.out.println("--------------------");		    System.out.println("HEAD Test - Fail!");			System.out.println("--------------------");		}	}		public static void getTest(PrintWriter writeServer, BufferedReader readServer, String pageName)	{		String s = "";		String firstHeaderLine = "GET /" + pageName + " HTTP/1.1";		writeServer.println(firstHeaderLine);		writeServer.println("Host: localhost");		writeServer.println();		try {			int count = 0;			String code = "error";			while((s = readServer.readLine()) != null )			{                if (count == 0)				{				    if (s != null)					{					    String [] args = s.split(" ");					    if (args.length > 2)						{					        code = args[1];						    code = code.trim();						}					}				}								System.out.println(s);				count++;			}					if (code.equals("200"))			{			    System.out.println("-------------------------");				System.out.println("GET: 200 Test - Pass!");				System.out.println("-------------------------");			}			else			{			    System.out.println("------------------------");				System.out.println("GET: 200 Test - Fail!");				System.out.println("------------------------");			}		} catch (IOException e) {		}					}	public static void putNewTest(PrintWriter writeServer, BufferedReader readServer, String file)	{		String s = "";		String message = "PUT /" + file + " HTTP/1.1";		writeServer.println(message);		writeServer.println();				writeServer.println();		writeServer.println("This is the contents of " + file + ".  Check the server to see if you get this content...");		try 		{				    int count = 0;			String code = "error";			while ((s = readServer.readLine()) != null)			{						    if (count == 0)				{				    if (s != null)					{					    String [] args = s.split(" ");					    if (args.length > 2)						{					        code = args[1];						    code = code.trim();						}					}				}								System.out.println(s);								count++;			}						if (code.equals("201"))			{			    System.out.println("-------------------------");				System.out.println("GET: 201 Test - Pass!");				System.out.println("-------------------------");			}			else			{			    System.out.println("------------------------");				System.out.println("GET: 201 Test - Fail!");				System.out.println("------------------------");			}		} 		catch (IOException e) 		{		}	}	public static void putZeroTest(PrintWriter writeServer, BufferedReader readServer, String file)	{		String s = "";		String message = "PUT /" + file + " HTTP/1.1";		writeServer.println(message);		writeServer.println();				try 		{				    int count = 0;			String code = "error";			while ((s = readServer.readLine()) != null)			{						    if (count == 0)				{				    if (s != null)					{					    String [] args = s.split(" ");					    if (args.length > 2)						{					        code = args[1];						    code = code.trim();						}					}				}								System.out.println(s);								count++;			}						if (code.equals("204"))			{			    System.out.println("-------------------------");				System.out.println("GET: 204 Test - Pass!");				System.out.println("-------------------------");			}			else			{			    System.out.println("------------------------");				System.out.println("GET: 204 Test - Fail!");				System.out.println("------------------------");			}		} 		catch (IOException e) 		{		}	}}